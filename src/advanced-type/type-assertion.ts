export {};

//! ================
//! 型アサーション
//! ================

// 型というのは「制約」を付ければ付けるほど「安全」になる
// 型というのは「制約」を付ければ付けるほど「安全」になる
// 型というのは「制約」を付ければ付けるほど「安全」になる

//? 定義
// 推論された型や、既に定義済みの変数の型を上書きする

//? どんなときに使う？
// 型推論が最適な推論を行わない時に使う

//? 型推論とは？
// 型が明示されていない場合に、型をいい感じにTSが推測してくれる機能

//? <型>とasでの型アサーションはどちらが推奨されている？
// asが推奨されている。なぜならJSXとの区別が付かなくなるから

//? <型>での型アサーション

let foo: any;
const testStr = <string>foo;

//? asでの型アサーション

let foo1: any;
const testStr1 = foo as string;

//?「as any」によって無理やりコンパイルエラーを免れる方法

const str = 'kazuki';

let nub = 25;
nub = str as any;

//? 一度「any」を通して型アサーションするとどんな型にも変換可能

let name: any = 'Ham';
let length = (name as string).length;
console.log({ length });
